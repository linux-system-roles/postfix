---
- name: Install Postfix
  package: name=postfix state=latest

- name: Enable Postfix
  service: name=postfix state=started enabled=yes

- name: Check Postfix 
  shell: "postconf -h \"{{ item.key }}\" | grep -w \"{{ item.value }}\""
  ignore_errors: true
  with_dict: "{{ postfix_conf }}"
  register: checkpostfix
  changed_when: False


- name: Set outstanding config options
  set_fact:
    postfix_conf_outstanding: "{{ postfix_conf_outstanding + [item.item.key] }}" 
  loop: "{{checkpostfix.results}}"
  when: item.rc != 0

- block:
  - name: Backup configuration
    shell: cp /etc/postfix/main.cf /etc/postfix/main.cf.{{ postfix_backup_multiple | ternary("`date -Iseconds`", "backup") }}
    when: postfix_backup or postfix_backup_multiple
  
  - name: Add header 1 to configuration file
    lineinfile:
      dest: /etc/postfix/main.cf
      regexp: '# Last modified:'
      state: present
      insertbefore: BOF
      line: "# Last modified: {{ ansible_date_time.date }}\n"
  
  - name: Add header 2 to configuration file
    lineinfile:
      dest: /etc/postfix/main.cf
      regexp: 'managed by [aA]nsible'
      state: present
      insertbefore: BOF
      line: "# This file is managed by Ansible"

  - name: debug
    debug:
      var: postfix_conf_outstanding
  
  - name: Configure Postfix
    command: "postconf -e \"{{ item.key }}={{ item.value }}\""
    ignore_errors: true
    notify: check restart postfix
    with_dict: "{{ postfix_conf }}"
    when: item.key in postfix_conf_outstanding
  when: (postfix_conf_outstanding|length >0)
